{
  "contractName": "FreightFactory",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "freights",
      "outputs": [
        {
          "internalType": "contract Freight",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "createFreight",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value_",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "advance_money_",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "contract_",
          "type": "address"
        }
      ],
      "name": "createOffer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getFreights",
      "outputs": [
        {
          "internalType": "contract Freight[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "address_freight_",
          "type": "address"
        }
      ],
      "name": "getFreight",
      "outputs": [
        {
          "internalType": "contract Freight",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner_",
          "type": "address"
        }
      ],
      "name": "getFreightsByOwner",
      "outputs": [
        {
          "internalType": "contract Freight[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "offer_",
          "type": "address"
        }
      ],
      "name": "getFreightsByOffer",
      "outputs": [
        {
          "internalType": "contract Freight[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner_",
          "type": "address"
        }
      ],
      "name": "getLastFreightOwner",
      "outputs": [
        {
          "internalType": "contract Freight",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"createFreight\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"advance_money_\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"contract_\",\"type\":\"address\"}],\"name\":\"createOffer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"freights\",\"outputs\":[{\"internalType\":\"contract Freight\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"address_freight_\",\"type\":\"address\"}],\"name\":\"getFreight\",\"outputs\":[{\"internalType\":\"contract Freight\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFreights\",\"outputs\":[{\"internalType\":\"contract Freight[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"offer_\",\"type\":\"address\"}],\"name\":\"getFreightsByOffer\",\"outputs\":[{\"internalType\":\"contract Freight[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"getFreightsByOwner\",\"outputs\":[{\"internalType\":\"contract Freight[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"getLastFreightOwner\",\"outputs\":[{\"internalType\":\"contract Freight\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/FreightFactory.sol\":\"FreightFactory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/CloneFactory.sol\":{\"keccak256\":\"0x4e775012dd5c485a2ac66522c6d3062eae223343c8b1f7cdf37b97cc3ea0a17a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a4dda98efbf3647d272d3f97e8c4d93ccfd3bc25af4d2142c42c7575086b8b37\",\"dweb:/ipfs/QmWVJsQ85Y3i19UK6JAGqcJeTbko6nfvyzMx8GR5jiryxe\"]},\"project:/contracts/Freight.sol\":{\"keccak256\":\"0xe8ab880cd3c422eff89b1c748869d98b896cf5359fe2ce2a162ae605ace3acb0\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://0c50447c76ee12ce762c63a9dbb89b0bbfa631c8184984f1a4a74cfa81ee4b72\",\"dweb:/ipfs/QmRG2i9ReNSR3sd5LpCx1o5b8xiZaP9jt4LpCVUvznKKfm\"]},\"project:/contracts/FreightFactory.sol\":{\"keccak256\":\"0x3e8de34c4296fdefdd0c97c0a4a566bbc8b78e72519b028e76ec453c92f511bf\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://6e4f4edfcf78f4e0f9733ff775cb12183744a166a19983a970b0c392db92479d\",\"dweb:/ipfs/QmUyAicpyaAX8VewfLmgb5H1TQ6sTBLqF7BW9CSQg9pCam\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100885760003560e01c8063acce53211161005b578063acce532114610139578063e1d4dfb114610143578063faa8cc8314610173578063fcbe7cad146101a357610088565b80630598de401461008d57806340c63a1c146100bd57806366b6aff6146100ed5780637550183614610109575b600080fd5b6100a760048036038101906100a291906109c8565b6101c1565b6040516100b49190610b03565b60405180910390f35b6100d760048036038101906100d29190610b5b565b61028e565b6040516100e49190610b97565b60405180910390f35b61010760048036038101906101029190610bb2565b6102cd565b005b610123600480360381019061011e91906109c8565b610446565b6040516101309190610b97565b60405180910390f35b6101416104af565b005b61015d600480360381019061015891906109c8565b6106cd565b60405161016a9190610b97565b60405180910390f35b61018d600480360381019061018891906109c8565b6107a0565b60405161019a9190610b03565b60405180910390f35b6101ab61086d565b6040516101b89190610b03565b60405180910390f35b6060600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561028257602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610238575b50505050509050919050565b6000818154811061029e57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff166366b6aff68585336040518463ffffffff1660e01b815260040161036e93929190610c23565b600060405180830381600087803b15801561038857600080fd5b505af115801561039c573d6000803e3d6000fd5b50505050600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006104dc600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166108fb565b90508073ffffffffffffffffffffffffffffffffffffffff166313af4035336040518263ffffffff1660e01b81526004016105179190610c5a565b600060405180830381600087803b15801561053157600080fd5b505af1158015610545573d6000803e3d6000fd5b5050505080600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905061075d9190610ca4565b8154811061076e5761076d610cd8565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6060600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561086157602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610817575b50505050509050919050565b606060008054806020026020016040519081016040528092919081815260200182805480156108f157602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116108a7575b5050505050905090565b6000808260601b90506040517f3d602d80600a3d3981f3363d3d373d3d3d363d7300000000000000000000000081528160148201527f5af43d82803e903d91602b57fd5bf3000000000000000000000000000000000060288201526037816000f092505050919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006109958261096a565b9050919050565b6109a58161098a565b81146109b057600080fd5b50565b6000813590506109c28161099c565b92915050565b6000602082840312156109de576109dd610965565b5b60006109ec848285016109b3565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000819050919050565b6000610a46610a41610a3c8461096a565b610a21565b61096a565b9050919050565b6000610a5882610a2b565b9050919050565b6000610a6a82610a4d565b9050919050565b610a7a81610a5f565b82525050565b6000610a8c8383610a71565b60208301905092915050565b6000602082019050919050565b6000610ab0826109f5565b610aba8185610a00565b9350610ac583610a11565b8060005b83811015610af6578151610add8882610a80565b9750610ae883610a98565b925050600181019050610ac9565b5085935050505092915050565b60006020820190508181036000830152610b1d8184610aa5565b905092915050565b6000819050919050565b610b3881610b25565b8114610b4357600080fd5b50565b600081359050610b5581610b2f565b92915050565b600060208284031215610b7157610b70610965565b5b6000610b7f84828501610b46565b91505092915050565b610b9181610a5f565b82525050565b6000602082019050610bac6000830184610b88565b92915050565b600080600060608486031215610bcb57610bca610965565b5b6000610bd986828701610b46565b9350506020610bea86828701610b46565b9250506040610bfb868287016109b3565b9150509250925092565b610c0e81610b25565b82525050565b610c1d8161098a565b82525050565b6000606082019050610c386000830186610c05565b610c456020830185610c05565b610c526040830184610c14565b949350505050565b6000602082019050610c6f6000830184610c14565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610caf82610b25565b9150610cba83610b25565b925082821015610ccd57610ccc610c75565b5b828203905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea2646970667358221220ac482113ee5b9b301783fa66986ab4fc51efbe0261cffdd86e0e0f55b5da256d64736f6c634300080b0033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:7164:3",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:3",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:3",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:3"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:3"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:3",
                "type": ""
              }
            ],
            "src": "7:75:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:3",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:3",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:3"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:3",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:3",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:3"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "379:81:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "389:65:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "404:5:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "411:42:3",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "400:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "400:54:3"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "389:7:3"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "361:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "371:7:3",
                "type": ""
              }
            ],
            "src": "334:126:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "511:51:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "521:35:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "550:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "532:17:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "532:24:3"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "521:7:3"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "493:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "503:7:3",
                "type": ""
              }
            ],
            "src": "466:96:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "611:79:3",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "668:16:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "677:1:3",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "680:1:3",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "670:6:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "670:12:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "670:12:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "634:5:3"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "659:5:3"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "641:17:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "641:24:3"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "631:2:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "631:35:3"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "624:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "624:43:3"
                  },
                  "nodeType": "YulIf",
                  "src": "621:63:3"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "604:5:3",
                "type": ""
              }
            ],
            "src": "568:122:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "748:87:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "758:29:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "780:6:3"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "767:12:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "767:20:3"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "758:5:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "823:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "796:26:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "796:33:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "796:33:3"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "726:6:3",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "734:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "742:5:3",
                "type": ""
              }
            ],
            "src": "696:139:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "907:263:3",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "953:83:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "955:77:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "955:79:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "955:79:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "928:7:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "937:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "924:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "924:23:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "949:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "920:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "920:32:3"
                  },
                  "nodeType": "YulIf",
                  "src": "917:119:3"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1046:117:3",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1061:15:3",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1075:1:3",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1065:6:3",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1090:63:3",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1125:9:3"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1136:6:3"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1121:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1121:22:3"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1145:7:3"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1100:20:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1100:53:3"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1090:6:3"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "877:9:3",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "888:7:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "900:6:3",
                "type": ""
              }
            ],
            "src": "841:329:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1266:40:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1277:22:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1293:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1287:5:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1287:12:3"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "1277:6:3"
                    }
                  ]
                }
              ]
            },
            "name": "array_length_t_array$_t_contract$_Freight_$1026_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1249:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "1259:6:3",
                "type": ""
              }
            ],
            "src": "1176:130:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1423:73:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1440:3:3"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1445:6:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1433:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1433:19:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1433:19:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1461:29:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1480:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1485:4:3",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1476:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1476:14:3"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "1461:11:3"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1395:3:3",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "1400:6:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "1411:11:3",
                "type": ""
              }
            ],
            "src": "1312:184:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1590:60:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1600:11:3",
                  "value": {
                    "name": "ptr",
                    "nodeType": "YulIdentifier",
                    "src": "1608:3:3"
                  },
                  "variableNames": [
                    {
                      "name": "data",
                      "nodeType": "YulIdentifier",
                      "src": "1600:4:3"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1621:22:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "ptr",
                        "nodeType": "YulIdentifier",
                        "src": "1633:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1638:4:3",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1629:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1629:14:3"
                  },
                  "variableNames": [
                    {
                      "name": "data",
                      "nodeType": "YulIdentifier",
                      "src": "1621:4:3"
                    }
                  ]
                }
              ]
            },
            "name": "array_dataslot_t_array$_t_contract$_Freight_$1026_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "ptr",
                "nodeType": "YulTypedName",
                "src": "1577:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "1585:4:3",
                "type": ""
              }
            ],
            "src": "1502:148:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1688:28:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1698:12:3",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1705:5:3"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "1698:3:3"
                    }
                  ]
                }
              ]
            },
            "name": "identity",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1674:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "1684:3:3",
                "type": ""
              }
            ],
            "src": "1656:60:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1782:82:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1792:66:3",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1850:5:3"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint160",
                              "nodeType": "YulIdentifier",
                              "src": "1832:17:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1832:24:3"
                          }
                        ],
                        "functionName": {
                          "name": "identity",
                          "nodeType": "YulIdentifier",
                          "src": "1823:8:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1823:34:3"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "1805:17:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1805:53:3"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "1792:9:3"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_uint160_to_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1762:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "1772:9:3",
                "type": ""
              }
            ],
            "src": "1722:142:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1930:66:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1940:50:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1984:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_uint160_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "1953:30:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1953:37:3"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "1940:9:3"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_uint160_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1910:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "1920:9:3",
                "type": ""
              }
            ],
            "src": "1870:126:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2078:66:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2088:50:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2132:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_uint160_to_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "2101:30:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2101:37:3"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "2088:9:3"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_Freight_$1026_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2058:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "2068:9:3",
                "type": ""
              }
            ],
            "src": "2002:142:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2221:82:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2238:3:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2290:5:3"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_Freight_$1026_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2243:46:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2243:53:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2231:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2231:66:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2231:66:3"
                }
              ]
            },
            "name": "abi_encode_t_contract$_Freight_$1026_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2209:5:3",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2216:3:3",
                "type": ""
              }
            ],
            "src": "2150:153:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2405:115:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2465:6:3"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2473:3:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_Freight_$1026_to_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "2415:49:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2415:62:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2415:62:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2486:28:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2504:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2509:4:3",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2500:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2500:14:3"
                  },
                  "variableNames": [
                    {
                      "name": "updatedPos",
                      "nodeType": "YulIdentifier",
                      "src": "2486:10:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encodeUpdatedPos_t_contract$_Freight_$1026_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2378:6:3",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2386:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updatedPos",
                "nodeType": "YulTypedName",
                "src": "2394:10:3",
                "type": ""
              }
            ],
            "src": "2309:211:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2617:38:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2627:22:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "ptr",
                        "nodeType": "YulIdentifier",
                        "src": "2639:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2644:4:3",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2635:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2635:14:3"
                  },
                  "variableNames": [
                    {
                      "name": "next",
                      "nodeType": "YulIdentifier",
                      "src": "2627:4:3"
                    }
                  ]
                }
              ]
            },
            "name": "array_nextElement_t_array$_t_contract$_Freight_$1026_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "ptr",
                "nodeType": "YulTypedName",
                "src": "2604:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "next",
                "nodeType": "YulTypedName",
                "src": "2612:4:3",
                "type": ""
              }
            ],
            "src": "2526:129:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2840:672:3",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2850:84:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2928:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_array$_t_contract$_Freight_$1026_$dyn_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "2864:63:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2864:70:3"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "2854:6:3",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2943:93:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3024:3:3"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3029:6:3"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2950:73:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2950:86:3"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "2943:3:3"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3045:87:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3126:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "array_dataslot_t_array$_t_contract$_Freight_$1026_$dyn_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "3060:65:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3060:72:3"
                  },
                  "variables": [
                    {
                      "name": "baseRef",
                      "nodeType": "YulTypedName",
                      "src": "3049:7:3",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3141:21:3",
                  "value": {
                    "name": "baseRef",
                    "nodeType": "YulIdentifier",
                    "src": "3155:7:3"
                  },
                  "variables": [
                    {
                      "name": "srcPtr",
                      "nodeType": "YulTypedName",
                      "src": "3145:6:3",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3231:256:3",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "3245:34:3",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "3272:6:3"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "3266:5:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3266:13:3"
                        },
                        "variables": [
                          {
                            "name": "elementValue0",
                            "nodeType": "YulTypedName",
                            "src": "3249:13:3",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "3292:86:3",
                        "value": {
                          "arguments": [
                            {
                              "name": "elementValue0",
                              "nodeType": "YulIdentifier",
                              "src": "3359:13:3"
                            },
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "3374:3:3"
                            }
                          ],
                          "functionName": {
                            "name": "abi_encodeUpdatedPos_t_contract$_Freight_$1026_to_t_address",
                            "nodeType": "YulIdentifier",
                            "src": "3299:59:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3299:79:3"
                        },
                        "variableNames": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "3292:3:3"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "3391:86:3",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "3470:6:3"
                            }
                          ],
                          "functionName": {
                            "name": "array_nextElement_t_array$_t_contract$_Freight_$1026_$dyn_memory_ptr",
                            "nodeType": "YulIdentifier",
                            "src": "3401:68:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3401:76:3"
                        },
                        "variableNames": [
                          {
                            "name": "srcPtr",
                            "nodeType": "YulIdentifier",
                            "src": "3391:6:3"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "3193:1:3"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3196:6:3"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "3190:2:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3190:13:3"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "3204:18:3",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "3206:14:3",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "3215:1:3"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3218:1:3",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "3211:3:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3211:9:3"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "3206:1:3"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "3175:14:3",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "3177:10:3",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "3186:1:3",
                          "type": "",
                          "value": "0"
                        },
                        "variables": [
                          {
                            "name": "i",
                            "nodeType": "YulTypedName",
                            "src": "3181:1:3",
                            "type": ""
                          }
                        ]
                      }
                    ]
                  },
                  "src": "3171:316:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3496:10:3",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "3503:3:3"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3496:3:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_array$_t_contract$_Freight_$1026_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2819:5:3",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2826:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2835:3:3",
                "type": ""
              }
            ],
            "src": "2700:812:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3682:241:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3692:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3704:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3715:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3700:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3700:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3692:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3739:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3750:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3735:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3735:17:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "3758:4:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3764:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3754:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3754:20:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3728:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3728:47:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3728:47:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3784:132:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3902:6:3"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "3911:4:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_array$_t_contract$_Freight_$1026_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3792:109:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3792:124:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3784:4:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_array$_t_contract$_Freight_$1026_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3654:9:3",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3666:6:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3677:4:3",
                "type": ""
              }
            ],
            "src": "3518:405:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3974:32:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3984:16:3",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "3995:5:3"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "3984:7:3"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3956:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "3966:7:3",
                "type": ""
              }
            ],
            "src": "3929:77:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4055:79:3",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4112:16:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4121:1:3",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4124:1:3",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4114:6:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4114:12:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4114:12:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4078:5:3"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "4103:5:3"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "4085:17:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4085:24:3"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "4075:2:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4075:35:3"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "4068:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4068:43:3"
                  },
                  "nodeType": "YulIf",
                  "src": "4065:63:3"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4048:5:3",
                "type": ""
              }
            ],
            "src": "4012:122:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4192:87:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4202:29:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "4224:6:3"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4211:12:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4211:20:3"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "4202:5:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4267:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "4240:26:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4240:33:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4240:33:3"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "4170:6:3",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4178:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4186:5:3",
                "type": ""
              }
            ],
            "src": "4140:139:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4351:263:3",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4397:83:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "4399:77:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4399:79:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4399:79:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4372:7:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4381:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4368:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4368:23:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4393:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4364:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4364:32:3"
                  },
                  "nodeType": "YulIf",
                  "src": "4361:119:3"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4490:117:3",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4505:15:3",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4519:1:3",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4509:6:3",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4534:63:3",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4569:9:3"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4580:6:3"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4565:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4565:22:3"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4589:7:3"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "4544:20:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4544:53:3"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "4534:6:3"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4321:9:3",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4332:7:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4344:6:3",
                "type": ""
              }
            ],
            "src": "4285:329:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4701:82:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4718:3:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4770:5:3"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_Freight_$1026_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "4723:46:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4723:53:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4711:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4711:66:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4711:66:3"
                }
              ]
            },
            "name": "abi_encode_t_contract$_Freight_$1026_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4689:5:3",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4696:3:3",
                "type": ""
              }
            ],
            "src": "4620:163:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4903:140:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4913:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4925:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4936:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4921:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4921:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4913:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5009:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5022:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5033:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5018:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5018:17:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_Freight_$1026_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4949:59:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4949:87:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4949:87:3"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_Freight_$1026__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4875:9:3",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4887:6:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4898:4:3",
                "type": ""
              }
            ],
            "src": "4789:254:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5149:519:3",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5195:83:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "5197:77:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5197:79:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5197:79:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5170:7:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5179:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5166:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5166:23:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5191:2:3",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "5162:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5162:32:3"
                  },
                  "nodeType": "YulIf",
                  "src": "5159:119:3"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "5288:117:3",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5303:15:3",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5317:1:3",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "5307:6:3",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5332:63:3",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5367:9:3"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "5378:6:3"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5363:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5363:22:3"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5387:7:3"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "5342:20:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5342:53:3"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "5332:6:3"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "5415:118:3",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5430:16:3",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5444:2:3",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "5434:6:3",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5460:63:3",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5495:9:3"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "5506:6:3"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5491:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5491:22:3"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5515:7:3"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "5470:20:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5470:53:3"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "5460:6:3"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "5543:118:3",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5558:16:3",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5572:2:3",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "5562:6:3",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5588:63:3",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5623:9:3"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "5634:6:3"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5619:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5619:22:3"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5643:7:3"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "5598:20:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5598:53:3"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "5588:6:3"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5103:9:3",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "5114:7:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5126:6:3",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5134:6:3",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "5142:6:3",
                "type": ""
              }
            ],
            "src": "5049:619:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5739:53:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5756:3:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5779:5:3"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "5761:17:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5761:24:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5749:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5749:37:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5749:37:3"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5727:5:3",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5734:3:3",
                "type": ""
              }
            ],
            "src": "5674:118:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5863:53:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5880:3:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5903:5:3"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "5885:17:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5885:24:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5873:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5873:37:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5873:37:3"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5851:5:3",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5858:3:3",
                "type": ""
              }
            ],
            "src": "5798:118:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6076:288:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6086:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6098:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6109:2:3",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6094:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6094:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6086:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6166:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6179:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6190:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6175:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6175:17:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6122:43:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6122:71:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6122:71:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "6247:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6260:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6271:2:3",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6256:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6256:18:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6203:43:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6203:72:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6203:72:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "6329:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6342:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6353:2:3",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6338:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6338:18:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6285:43:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6285:72:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6285:72:3"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256_t_address__to_t_uint256_t_uint256_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6032:9:3",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "6044:6:3",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6052:6:3",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6060:6:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6071:4:3",
                "type": ""
              }
            ],
            "src": "5922:442:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6468:124:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6478:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6490:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6501:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6486:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6486:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6478:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6558:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6571:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6582:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6567:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6567:17:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6514:43:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6514:71:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6514:71:3"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6440:9:3",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6452:6:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6463:4:3",
                "type": ""
              }
            ],
            "src": "6370:222:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6626:152:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6643:1:3",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6646:77:3",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6636:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6636:88:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6636:88:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6740:1:3",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6743:4:3",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6733:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6733:15:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6733:15:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6764:1:3",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6767:4:3",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "6757:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6757:15:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6757:15:3"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "6598:180:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6829:146:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6839:25:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6862:1:3"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "6844:17:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6844:20:3"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "6839:1:3"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6873:25:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "6896:1:3"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "6878:17:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6878:20:3"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "6873:1:3"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6920:22:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "6922:16:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6922:18:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6922:18:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6914:1:3"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "6917:1:3"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "6911:2:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6911:8:3"
                  },
                  "nodeType": "YulIf",
                  "src": "6908:34:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6952:17:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6964:1:3"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "6967:1:3"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "6960:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6960:9:3"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "6952:4:3"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "6815:1:3",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "6818:1:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "6824:4:3",
                "type": ""
              }
            ],
            "src": "6784:191:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7009:152:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7026:1:3",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7029:77:3",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7019:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7019:88:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7019:88:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7123:1:3",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7126:4:3",
                        "type": "",
                        "value": "0x32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7116:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7116:15:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7116:15:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7147:1:3",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7150:4:3",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "7140:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7140:15:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7140:15:3"
                }
              ]
            },
            "name": "panic_error_0x32",
            "nodeType": "YulFunctionDefinition",
            "src": "6981:180:3"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_contract$_Freight_$1026_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_contract$_Freight_$1026_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_Freight_$1026_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_Freight_$1026_to_t_address(value, pos) {\n        mstore(pos, convert_t_contract$_Freight_$1026_to_t_address(value))\n    }\n\n    function abi_encodeUpdatedPos_t_contract$_Freight_$1026_to_t_address(value0, pos) -> updatedPos {\n        abi_encode_t_contract$_Freight_$1026_to_t_address(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_contract$_Freight_$1026_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // contract Freight[] -> address[]\n    function abi_encode_t_array$_t_contract$_Freight_$1026_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_contract$_Freight_$1026_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_contract$_Freight_$1026_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_contract$_Freight_$1026_to_t_address(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_contract$_Freight_$1026_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_contract$_Freight_$1026_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_contract$_Freight_$1026_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_contract$_Freight_$1026_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_Freight_$1026_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_Freight_$1026__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_Freight_$1026_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_address(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_address__to_t_uint256_t_uint256_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n}\n",
      "id": 3,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "119:2278:2:-:0;;;646:104;;;;;;;;;;670:14;687:13;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;670:30;;736:6;710:15;;:33;;;;;;;;;;;;;;;;;;660:90;119:2278;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "119:2278:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2100:131;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;189:25;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1333:307;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1820:137;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;834:423;;;:::i;:::-;;2237:158;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1963:131;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1718:96;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2100:131;2165:16;2201:14;:22;2216:6;2201:22;;;;;;;;;;;;;;;2193:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2100:131;;;:::o;189:25::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1333:307::-;1424:15;1442:17;:28;1460:9;1442:28;;;;;;;;;;;;;;;;;;;;;;;;;1424:46;;1480:7;:19;;;1500:6;1508:14;1524:10;1480:55;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1593:14;:26;1608:10;1593:26;;;;;;;;;;;;;;;1625:7;1593:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1414:226;1333:307;;;:::o;1820:137::-;1887:7;1914:17;:35;1932:16;1914:35;;;;;;;;;;;;;;;;;;;;;;;;;1906:44;;1820:137;;;:::o;834:423::-;906:15;932:28;944:15;;;;;;;;;;;932:11;:28::i;:::-;906:55;;971:7;:16;;;988:10;971:28;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1087:7;1049:17;:35;1075:7;1049:35;;;;;;;;;;;;;;;;:45;;;;;;;;;;;;;;;;;;1142:14;:26;1157:10;1142:26;;;;;;;;;;;;;;;1174:7;1142:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1228:8;1242:7;1228:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;866:391;834:423::o;2237:158::-;2303:7;2330:14;:22;2345:6;2330:22;;;;;;;;;;;;;;;2385:1;2353:14;:22;2368:6;2353:22;;;;;;;;;;;;;;;:29;;;;:33;;;;:::i;:::-;2330:57;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2322:66;;2237:158;;;:::o;1963:131::-;2028:16;2064:14;:22;2079:6;2064:22;;;;;;;;;;;;;;;2056:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1963:131;;;:::o;1718:96::-;1762:16;1798:8;1790:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1718:96;:::o;1251:441:0:-;1306:14;1328:19;1358:6;1350:15;;1328:37;;1407:4;1401:11;1433:66;1426:5;1419:81;1532:11;1525:4;1518:5;1514:16;1507:37;1576:66;1569:4;1562:5;1558:16;1551:92;1677:4;1670:5;1667:1;1660:22;1650:32;;1380:308;;1251:441;;;:::o;88:117:3:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:130::-;1259:6;1293:5;1287:12;1277:22;;1176:130;;;:::o;1312:184::-;1411:11;1445:6;1440:3;1433:19;1485:4;1480:3;1476:14;1461:29;;1312:184;;;;:::o;1502:148::-;1585:4;1608:3;1600:11;;1638:4;1633:3;1629:14;1621:22;;1502:148;;;:::o;1656:60::-;1684:3;1705:5;1698:12;;1656:60;;;:::o;1722:142::-;1772:9;1805:53;1823:34;1832:24;1850:5;1832:24;:::i;:::-;1823:34;:::i;:::-;1805:53;:::i;:::-;1792:66;;1722:142;;;:::o;1870:126::-;1920:9;1953:37;1984:5;1953:37;:::i;:::-;1940:50;;1870:126;;;:::o;2002:142::-;2068:9;2101:37;2132:5;2101:37;:::i;:::-;2088:50;;2002:142;;;:::o;2150:153::-;2243:53;2290:5;2243:53;:::i;:::-;2238:3;2231:66;2150:153;;:::o;2309:211::-;2394:10;2415:62;2473:3;2465:6;2415:62;:::i;:::-;2509:4;2504:3;2500:14;2486:28;;2309:211;;;;:::o;2526:129::-;2612:4;2644;2639:3;2635:14;2627:22;;2526:129;;;:::o;2700:812::-;2835:3;2864:70;2928:5;2864:70;:::i;:::-;2950:86;3029:6;3024:3;2950:86;:::i;:::-;2943:93;;3060:72;3126:5;3060:72;:::i;:::-;3155:7;3186:1;3171:316;3196:6;3193:1;3190:13;3171:316;;;3272:6;3266:13;3299:79;3374:3;3359:13;3299:79;:::i;:::-;3292:86;;3401:76;3470:6;3401:76;:::i;:::-;3391:86;;3231:256;3218:1;3215;3211:9;3206:14;;3171:316;;;3175:14;3503:3;3496:10;;2840:672;;;2700:812;;;;:::o;3518:405::-;3677:4;3715:2;3704:9;3700:18;3692:26;;3764:9;3758:4;3754:20;3750:1;3739:9;3735:17;3728:47;3792:124;3911:4;3902:6;3792:124;:::i;:::-;3784:132;;3518:405;;;;:::o;3929:77::-;3966:7;3995:5;3984:16;;3929:77;;;:::o;4012:122::-;4085:24;4103:5;4085:24;:::i;:::-;4078:5;4075:35;4065:63;;4124:1;4121;4114:12;4065:63;4012:122;:::o;4140:139::-;4186:5;4224:6;4211:20;4202:29;;4240:33;4267:5;4240:33;:::i;:::-;4140:139;;;;:::o;4285:329::-;4344:6;4393:2;4381:9;4372:7;4368:23;4364:32;4361:119;;;4399:79;;:::i;:::-;4361:119;4519:1;4544:53;4589:7;4580:6;4569:9;4565:22;4544:53;:::i;:::-;4534:63;;4490:117;4285:329;;;;:::o;4620:163::-;4723:53;4770:5;4723:53;:::i;:::-;4718:3;4711:66;4620:163;;:::o;4789:254::-;4898:4;4936:2;4925:9;4921:18;4913:26;;4949:87;5033:1;5022:9;5018:17;5009:6;4949:87;:::i;:::-;4789:254;;;;:::o;5049:619::-;5126:6;5134;5142;5191:2;5179:9;5170:7;5166:23;5162:32;5159:119;;;5197:79;;:::i;:::-;5159:119;5317:1;5342:53;5387:7;5378:6;5367:9;5363:22;5342:53;:::i;:::-;5332:63;;5288:117;5444:2;5470:53;5515:7;5506:6;5495:9;5491:22;5470:53;:::i;:::-;5460:63;;5415:118;5572:2;5598:53;5643:7;5634:6;5623:9;5619:22;5598:53;:::i;:::-;5588:63;;5543:118;5049:619;;;;;:::o;5674:118::-;5761:24;5779:5;5761:24;:::i;:::-;5756:3;5749:37;5674:118;;:::o;5798:::-;5885:24;5903:5;5885:24;:::i;:::-;5880:3;5873:37;5798:118;;:::o;5922:442::-;6071:4;6109:2;6098:9;6094:18;6086:26;;6122:71;6190:1;6179:9;6175:17;6166:6;6122:71;:::i;:::-;6203:72;6271:2;6260:9;6256:18;6247:6;6203:72;:::i;:::-;6285;6353:2;6342:9;6338:18;6329:6;6285:72;:::i;:::-;5922:442;;;;;;:::o;6370:222::-;6463:4;6501:2;6490:9;6486:18;6478:26;;6514:71;6582:1;6571:9;6567:17;6558:6;6514:71;:::i;:::-;6370:222;;;;:::o;6598:180::-;6646:77;6643:1;6636:88;6743:4;6740:1;6733:15;6767:4;6764:1;6757:15;6784:191;6824:4;6844:20;6862:1;6844:20;:::i;:::-;6839:25;;6878:20;6896:1;6878:20;:::i;:::-;6873:25;;6917:1;6914;6911:8;6908:34;;;6922:18;;:::i;:::-;6908:34;6967:1;6964;6960:9;6952:17;;6784:191;;;;:::o;6981:180::-;7029:77;7026:1;7019:88;7126:4;7123:1;7116:15;7150:4;7147:1;7140:15",
  "source": "// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.11;\n\nimport \"./CloneFactory.sol\";\nimport \"./Freight.sol\";\n\ncontract FreightFactory is CloneFactory {\n    // global variables\n    Freight[] public freights; // all freights\n    \n    mapping(address => Freight) freights_contract; // mapping freights by its contracts\n    mapping(address => Freight[]) freights_owner; // mapping freights by owner\n    mapping(address => Freight[]) freights_offer; // mapping who made offer to freights\n\n    address master_contract; // master contract to use as clone factory\n\n    // constructor, initializing an empty contract (to use as CloneFactory)\n    constructor() {\n        Freight master = new Freight();\n        master_contract = address(master);\n    }\n\n    /* ------------------------- CREATE FREIGHT ------------------------- */\n\n    function createFreight() public {\n        // create new freight\n        Freight freight = Freight(createClone(master_contract));\n        freight.setOwner(msg.sender);\n\n        // put into mapping by address\n        freights_contract[address(freight)] = freight;\n\n        // put into mapping by owner\n        freights_owner[msg.sender].push(freight);\n\n        // put into freights array\n        freights.push(freight);\n    }\n\n    /* ------------------------- OFFERS ------------------------- */\n\n    function createOffer(uint value_, uint advance_money_, address contract_) public {\n        Freight freight = freights_contract[contract_];\n        freight.createOffer(value_, advance_money_, msg.sender);\n\n        // put into mapping by who made offers\n        freights_offer[msg.sender].push(freight);\n    }\n\n\n    /* ------------------------- GETTERS ------------------------- */\n\n    function getFreights() view public returns (Freight[] memory) {\n        return (freights);\n    }\n\n    function getFreight(address address_freight_) view public returns (Freight) {\n        return (freights_contract[address_freight_]);\n    }\n\n    function getFreightsByOwner(address owner_) view public returns (Freight[] memory) {\n        return (freights_owner[owner_]);\n    }\n\n    function getFreightsByOffer(address offer_) view public returns (Freight[] memory) {\n        return (freights_offer[offer_]);\n    }\n\n    function getLastFreightOwner(address owner_) view public returns (Freight) {\n        return (freights_owner[owner_][freights_owner[owner_].length - 1]);\n    }\n}",
  "sourcePath": "/home/anthony_kamers/Desktop/UFSC/2021.2/blockchain/web3-react1/contracts/FreightFactory.sol",
  "ast": {
    "absolutePath": "project:/contracts/FreightFactory.sol",
    "exportedSymbols": {
      "Address": [
        63
      ],
      "CloneFactory": [
        36
      ],
      "Freight": [
        1026
      ],
      "FreightDetails": [
        87
      ],
      "FreightFactory": [
        1228
      ],
      "FreightSituation": [
        48
      ],
      "Offer": [
        70
      ],
      "WholeFreight": [
        98
      ]
    },
    "id": 1229,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1028,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "39:24:2"
      },
      {
        "absolutePath": "project:/contracts/CloneFactory.sol",
        "file": "./CloneFactory.sol",
        "id": 1029,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1229,
        "sourceUnit": 37,
        "src": "65:28:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Freight.sol",
        "file": "./Freight.sol",
        "id": 1030,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1229,
        "sourceUnit": 1027,
        "src": "94:23:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1031,
              "name": "CloneFactory",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 36,
              "src": "146:12:2"
            },
            "id": 1032,
            "nodeType": "InheritanceSpecifier",
            "src": "146:12:2"
          }
        ],
        "canonicalName": "FreightFactory",
        "contractDependencies": [
          1026
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1228,
        "linearizedBaseContracts": [
          1228,
          36
        ],
        "name": "FreightFactory",
        "nameLocation": "128:14:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "40c63a1c",
            "id": 1036,
            "mutability": "mutable",
            "name": "freights",
            "nameLocation": "206:8:2",
            "nodeType": "VariableDeclaration",
            "scope": 1228,
            "src": "189:25:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_contract$_Freight_$1026_$dyn_storage",
              "typeString": "contract Freight[]"
            },
            "typeName": {
              "baseType": {
                "id": 1034,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 1033,
                  "name": "Freight",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1026,
                  "src": "189:7:2"
                },
                "referencedDeclaration": 1026,
                "src": "189:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_Freight_$1026",
                  "typeString": "contract Freight"
                }
              },
              "id": 1035,
              "nodeType": "ArrayTypeName",
              "src": "189:9:2",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_contract$_Freight_$1026_$dyn_storage_ptr",
                "typeString": "contract Freight[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1041,
            "mutability": "mutable",
            "name": "freights_contract",
            "nameLocation": "269:17:2",
            "nodeType": "VariableDeclaration",
            "scope": 1228,
            "src": "241:45:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_contract$_Freight_$1026_$",
              "typeString": "mapping(address => contract Freight)"
            },
            "typeName": {
              "id": 1040,
              "keyType": {
                "id": 1037,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "249:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "241:27:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_contract$_Freight_$1026_$",
                "typeString": "mapping(address => contract Freight)"
              },
              "valueType": {
                "id": 1039,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 1038,
                  "name": "Freight",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1026,
                  "src": "260:7:2"
                },
                "referencedDeclaration": 1026,
                "src": "260:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_Freight_$1026",
                  "typeString": "contract Freight"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1047,
            "mutability": "mutable",
            "name": "freights_owner",
            "nameLocation": "359:14:2",
            "nodeType": "VariableDeclaration",
            "scope": 1228,
            "src": "329:44:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_contract$_Freight_$1026_$dyn_storage_$",
              "typeString": "mapping(address => contract Freight[])"
            },
            "typeName": {
              "id": 1046,
              "keyType": {
                "id": 1042,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "337:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "329:29:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_contract$_Freight_$1026_$dyn_storage_$",
                "typeString": "mapping(address => contract Freight[])"
              },
              "valueType": {
                "baseType": {
                  "id": 1044,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 1043,
                    "name": "Freight",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1026,
                    "src": "348:7:2"
                  },
                  "referencedDeclaration": 1026,
                  "src": "348:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Freight_$1026",
                    "typeString": "contract Freight"
                  }
                },
                "id": 1045,
                "nodeType": "ArrayTypeName",
                "src": "348:9:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_contract$_Freight_$1026_$dyn_storage_ptr",
                  "typeString": "contract Freight[]"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1053,
            "mutability": "mutable",
            "name": "freights_offer",
            "nameLocation": "438:14:2",
            "nodeType": "VariableDeclaration",
            "scope": 1228,
            "src": "408:44:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_contract$_Freight_$1026_$dyn_storage_$",
              "typeString": "mapping(address => contract Freight[])"
            },
            "typeName": {
              "id": 1052,
              "keyType": {
                "id": 1048,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "416:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "408:29:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_contract$_Freight_$1026_$dyn_storage_$",
                "typeString": "mapping(address => contract Freight[])"
              },
              "valueType": {
                "baseType": {
                  "id": 1050,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 1049,
                    "name": "Freight",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1026,
                    "src": "427:7:2"
                  },
                  "referencedDeclaration": 1026,
                  "src": "427:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Freight_$1026",
                    "typeString": "contract Freight"
                  }
                },
                "id": 1051,
                "nodeType": "ArrayTypeName",
                "src": "427:9:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_contract$_Freight_$1026_$dyn_storage_ptr",
                  "typeString": "contract Freight[]"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1055,
            "mutability": "mutable",
            "name": "master_contract",
            "nameLocation": "505:15:2",
            "nodeType": "VariableDeclaration",
            "scope": 1228,
            "src": "497:23:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1054,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "497:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1073,
              "nodeType": "Block",
              "src": "660:90:2",
              "statements": [
                {
                  "assignments": [
                    1060
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1060,
                      "mutability": "mutable",
                      "name": "master",
                      "nameLocation": "678:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1073,
                      "src": "670:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Freight_$1026",
                        "typeString": "contract Freight"
                      },
                      "typeName": {
                        "id": 1059,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1058,
                          "name": "Freight",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1026,
                          "src": "670:7:2"
                        },
                        "referencedDeclaration": 1026,
                        "src": "670:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Freight_$1026",
                          "typeString": "contract Freight"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1065,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1063,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "687:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Freight_$1026_$",
                        "typeString": "function () returns (contract Freight)"
                      },
                      "typeName": {
                        "id": 1062,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1061,
                          "name": "Freight",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1026,
                          "src": "691:7:2"
                        },
                        "referencedDeclaration": 1026,
                        "src": "691:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Freight_$1026",
                          "typeString": "contract Freight"
                        }
                      }
                    },
                    "id": 1064,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "687:13:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Freight_$1026",
                      "typeString": "contract Freight"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "670:30:2"
                },
                {
                  "expression": {
                    "id": 1071,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1066,
                      "name": "master_contract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1055,
                      "src": "710:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1069,
                          "name": "master",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1060,
                          "src": "736:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Freight_$1026",
                            "typeString": "contract Freight"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_Freight_$1026",
                            "typeString": "contract Freight"
                          }
                        ],
                        "id": 1068,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "728:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1067,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "728:7:2",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1070,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "728:15:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "710:33:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1072,
                  "nodeType": "ExpressionStatement",
                  "src": "710:33:2"
                }
              ]
            },
            "id": 1074,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1056,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "657:2:2"
            },
            "returnParameters": {
              "id": 1057,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "660:0:2"
            },
            "scope": 1228,
            "src": "646:104:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1116,
              "nodeType": "Block",
              "src": "866:391:2",
              "statements": [
                {
                  "assignments": [
                    1079
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1079,
                      "mutability": "mutable",
                      "name": "freight",
                      "nameLocation": "914:7:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1116,
                      "src": "906:15:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Freight_$1026",
                        "typeString": "contract Freight"
                      },
                      "typeName": {
                        "id": 1078,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1077,
                          "name": "Freight",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1026,
                          "src": "906:7:2"
                        },
                        "referencedDeclaration": 1026,
                        "src": "906:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Freight_$1026",
                          "typeString": "contract Freight"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1085,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1082,
                            "name": "master_contract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1055,
                            "src": "944:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1081,
                          "name": "createClone",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17,
                          "src": "932:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_address_$",
                            "typeString": "function (address) returns (address)"
                          }
                        },
                        "id": 1083,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "932:28:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1080,
                      "name": "Freight",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1026,
                      "src": "924:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_Freight_$1026_$",
                        "typeString": "type(contract Freight)"
                      }
                    },
                    "id": 1084,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "924:37:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Freight_$1026",
                      "typeString": "contract Freight"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "906:55:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1089,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "988:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1090,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "988:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 1086,
                        "name": "freight",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1079,
                        "src": "971:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Freight_$1026",
                          "typeString": "contract Freight"
                        }
                      },
                      "id": 1088,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setOwner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 211,
                      "src": "971:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 1091,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "971:28:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1092,
                  "nodeType": "ExpressionStatement",
                  "src": "971:28:2"
                },
                {
                  "expression": {
                    "id": 1100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1093,
                        "name": "freights_contract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1041,
                        "src": "1049:17:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_contract$_Freight_$1026_$",
                          "typeString": "mapping(address => contract Freight)"
                        }
                      },
                      "id": 1098,
                      "indexExpression": {
                        "arguments": [
                          {
                            "id": 1096,
                            "name": "freight",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1079,
                            "src": "1075:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Freight_$1026",
                              "typeString": "contract Freight"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Freight_$1026",
                              "typeString": "contract Freight"
                            }
                          ],
                          "id": 1095,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1067:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1094,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1067:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1097,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1067:16:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1049:35:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Freight_$1026",
                        "typeString": "contract Freight"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1099,
                      "name": "freight",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1079,
                      "src": "1087:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Freight_$1026",
                        "typeString": "contract Freight"
                      }
                    },
                    "src": "1049:45:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Freight_$1026",
                      "typeString": "contract Freight"
                    }
                  },
                  "id": 1101,
                  "nodeType": "ExpressionStatement",
                  "src": "1049:45:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1107,
                        "name": "freight",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1079,
                        "src": "1174:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Freight_$1026",
                          "typeString": "contract Freight"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Freight_$1026",
                          "typeString": "contract Freight"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 1102,
                          "name": "freights_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1047,
                          "src": "1142:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_contract$_Freight_$1026_$dyn_storage_$",
                            "typeString": "mapping(address => contract Freight[] storage ref)"
                          }
                        },
                        "id": 1105,
                        "indexExpression": {
                          "expression": {
                            "id": 1103,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1157:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1104,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1157:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1142:26:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_Freight_$1026_$dyn_storage",
                          "typeString": "contract Freight[] storage ref"
                        }
                      },
                      "id": 1106,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1142:31:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_contract$_Freight_$1026_$dyn_storage_ptr_$_t_contract$_Freight_$1026_$returns$__$bound_to$_t_array$_t_contract$_Freight_$1026_$dyn_storage_ptr_$",
                        "typeString": "function (contract Freight[] storage pointer,contract Freight)"
                      }
                    },
                    "id": 1108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1142:40:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1109,
                  "nodeType": "ExpressionStatement",
                  "src": "1142:40:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1113,
                        "name": "freight",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1079,
                        "src": "1242:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Freight_$1026",
                          "typeString": "contract Freight"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Freight_$1026",
                          "typeString": "contract Freight"
                        }
                      ],
                      "expression": {
                        "id": 1110,
                        "name": "freights",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1036,
                        "src": "1228:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_Freight_$1026_$dyn_storage",
                          "typeString": "contract Freight[] storage ref"
                        }
                      },
                      "id": 1112,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1228:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_contract$_Freight_$1026_$dyn_storage_ptr_$_t_contract$_Freight_$1026_$returns$__$bound_to$_t_array$_t_contract$_Freight_$1026_$dyn_storage_ptr_$",
                        "typeString": "function (contract Freight[] storage pointer,contract Freight)"
                      }
                    },
                    "id": 1114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1228:22:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1115,
                  "nodeType": "ExpressionStatement",
                  "src": "1228:22:2"
                }
              ]
            },
            "functionSelector": "acce5321",
            "id": 1117,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createFreight",
            "nameLocation": "843:13:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1075,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "856:2:2"
            },
            "returnParameters": {
              "id": 1076,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "866:0:2"
            },
            "scope": 1228,
            "src": "834:423:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1150,
              "nodeType": "Block",
              "src": "1414:226:2",
              "statements": [
                {
                  "assignments": [
                    1128
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1128,
                      "mutability": "mutable",
                      "name": "freight",
                      "nameLocation": "1432:7:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1150,
                      "src": "1424:15:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Freight_$1026",
                        "typeString": "contract Freight"
                      },
                      "typeName": {
                        "id": 1127,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1126,
                          "name": "Freight",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1026,
                          "src": "1424:7:2"
                        },
                        "referencedDeclaration": 1026,
                        "src": "1424:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Freight_$1026",
                          "typeString": "contract Freight"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1132,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1129,
                      "name": "freights_contract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1041,
                      "src": "1442:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_contract$_Freight_$1026_$",
                        "typeString": "mapping(address => contract Freight)"
                      }
                    },
                    "id": 1131,
                    "indexExpression": {
                      "id": 1130,
                      "name": "contract_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1123,
                      "src": "1460:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1442:28:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Freight_$1026",
                      "typeString": "contract Freight"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1424:46:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1136,
                        "name": "value_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1119,
                        "src": "1500:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1137,
                        "name": "advance_money_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1121,
                        "src": "1508:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 1138,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1524:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1139,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1524:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 1133,
                        "name": "freight",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1128,
                        "src": "1480:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Freight_$1026",
                          "typeString": "contract Freight"
                        }
                      },
                      "id": 1135,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "createOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 485,
                      "src": "1480:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,uint256,address) external"
                      }
                    },
                    "id": 1140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1480:55:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1141,
                  "nodeType": "ExpressionStatement",
                  "src": "1480:55:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1147,
                        "name": "freight",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1128,
                        "src": "1625:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Freight_$1026",
                          "typeString": "contract Freight"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Freight_$1026",
                          "typeString": "contract Freight"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 1142,
                          "name": "freights_offer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1053,
                          "src": "1593:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_contract$_Freight_$1026_$dyn_storage_$",
                            "typeString": "mapping(address => contract Freight[] storage ref)"
                          }
                        },
                        "id": 1145,
                        "indexExpression": {
                          "expression": {
                            "id": 1143,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1608:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1144,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1608:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1593:26:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_Freight_$1026_$dyn_storage",
                          "typeString": "contract Freight[] storage ref"
                        }
                      },
                      "id": 1146,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1593:31:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_contract$_Freight_$1026_$dyn_storage_ptr_$_t_contract$_Freight_$1026_$returns$__$bound_to$_t_array$_t_contract$_Freight_$1026_$dyn_storage_ptr_$",
                        "typeString": "function (contract Freight[] storage pointer,contract Freight)"
                      }
                    },
                    "id": 1148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1593:40:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1149,
                  "nodeType": "ExpressionStatement",
                  "src": "1593:40:2"
                }
              ]
            },
            "functionSelector": "66b6aff6",
            "id": 1151,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createOffer",
            "nameLocation": "1342:11:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1124,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1119,
                  "mutability": "mutable",
                  "name": "value_",
                  "nameLocation": "1359:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1151,
                  "src": "1354:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1118,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1354:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1121,
                  "mutability": "mutable",
                  "name": "advance_money_",
                  "nameLocation": "1372:14:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1151,
                  "src": "1367:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1120,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1367:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1123,
                  "mutability": "mutable",
                  "name": "contract_",
                  "nameLocation": "1396:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1151,
                  "src": "1388:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1122,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1388:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1353:53:2"
            },
            "returnParameters": {
              "id": 1125,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1414:0:2"
            },
            "scope": 1228,
            "src": "1333:307:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1161,
              "nodeType": "Block",
              "src": "1780:34:2",
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "id": 1158,
                        "name": "freights",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1036,
                        "src": "1798:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_Freight_$1026_$dyn_storage",
                          "typeString": "contract Freight[] storage ref"
                        }
                      }
                    ],
                    "id": 1159,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1797:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_Freight_$1026_$dyn_storage",
                      "typeString": "contract Freight[] storage ref"
                    }
                  },
                  "functionReturnParameters": 1157,
                  "id": 1160,
                  "nodeType": "Return",
                  "src": "1790:17:2"
                }
              ]
            },
            "functionSelector": "fcbe7cad",
            "id": 1162,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getFreights",
            "nameLocation": "1727:11:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1152,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1738:2:2"
            },
            "returnParameters": {
              "id": 1157,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1156,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1162,
                  "src": "1762:16:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_Freight_$1026_$dyn_memory_ptr",
                    "typeString": "contract Freight[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1154,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 1153,
                        "name": "Freight",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1026,
                        "src": "1762:7:2"
                      },
                      "referencedDeclaration": 1026,
                      "src": "1762:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Freight_$1026",
                        "typeString": "contract Freight"
                      }
                    },
                    "id": 1155,
                    "nodeType": "ArrayTypeName",
                    "src": "1762:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_Freight_$1026_$dyn_storage_ptr",
                      "typeString": "contract Freight[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1761:18:2"
            },
            "scope": 1228,
            "src": "1718:96:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1175,
              "nodeType": "Block",
              "src": "1896:61:2",
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "baseExpression": {
                          "id": 1170,
                          "name": "freights_contract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1041,
                          "src": "1914:17:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_contract$_Freight_$1026_$",
                            "typeString": "mapping(address => contract Freight)"
                          }
                        },
                        "id": 1172,
                        "indexExpression": {
                          "id": 1171,
                          "name": "address_freight_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1164,
                          "src": "1932:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1914:35:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Freight_$1026",
                          "typeString": "contract Freight"
                        }
                      }
                    ],
                    "id": 1173,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1913:37:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Freight_$1026",
                      "typeString": "contract Freight"
                    }
                  },
                  "functionReturnParameters": 1169,
                  "id": 1174,
                  "nodeType": "Return",
                  "src": "1906:44:2"
                }
              ]
            },
            "functionSelector": "75501836",
            "id": 1176,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getFreight",
            "nameLocation": "1829:10:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1165,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1164,
                  "mutability": "mutable",
                  "name": "address_freight_",
                  "nameLocation": "1848:16:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1176,
                  "src": "1840:24:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1163,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1840:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1839:26:2"
            },
            "returnParameters": {
              "id": 1169,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1168,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1176,
                  "src": "1887:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Freight_$1026",
                    "typeString": "contract Freight"
                  },
                  "typeName": {
                    "id": 1167,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1166,
                      "name": "Freight",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1026,
                      "src": "1887:7:2"
                    },
                    "referencedDeclaration": 1026,
                    "src": "1887:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Freight_$1026",
                      "typeString": "contract Freight"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1886:9:2"
            },
            "scope": 1228,
            "src": "1820:137:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1190,
              "nodeType": "Block",
              "src": "2046:48:2",
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "baseExpression": {
                          "id": 1185,
                          "name": "freights_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1047,
                          "src": "2064:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_contract$_Freight_$1026_$dyn_storage_$",
                            "typeString": "mapping(address => contract Freight[] storage ref)"
                          }
                        },
                        "id": 1187,
                        "indexExpression": {
                          "id": 1186,
                          "name": "owner_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1178,
                          "src": "2079:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2064:22:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_Freight_$1026_$dyn_storage",
                          "typeString": "contract Freight[] storage ref"
                        }
                      }
                    ],
                    "id": 1188,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2063:24:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_Freight_$1026_$dyn_storage",
                      "typeString": "contract Freight[] storage ref"
                    }
                  },
                  "functionReturnParameters": 1184,
                  "id": 1189,
                  "nodeType": "Return",
                  "src": "2056:31:2"
                }
              ]
            },
            "functionSelector": "faa8cc83",
            "id": 1191,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getFreightsByOwner",
            "nameLocation": "1972:18:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1179,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1178,
                  "mutability": "mutable",
                  "name": "owner_",
                  "nameLocation": "1999:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1191,
                  "src": "1991:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1177,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1991:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1990:16:2"
            },
            "returnParameters": {
              "id": 1184,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1183,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1191,
                  "src": "2028:16:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_Freight_$1026_$dyn_memory_ptr",
                    "typeString": "contract Freight[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1181,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 1180,
                        "name": "Freight",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1026,
                        "src": "2028:7:2"
                      },
                      "referencedDeclaration": 1026,
                      "src": "2028:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Freight_$1026",
                        "typeString": "contract Freight"
                      }
                    },
                    "id": 1182,
                    "nodeType": "ArrayTypeName",
                    "src": "2028:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_Freight_$1026_$dyn_storage_ptr",
                      "typeString": "contract Freight[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2027:18:2"
            },
            "scope": 1228,
            "src": "1963:131:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1205,
              "nodeType": "Block",
              "src": "2183:48:2",
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "baseExpression": {
                          "id": 1200,
                          "name": "freights_offer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1053,
                          "src": "2201:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_contract$_Freight_$1026_$dyn_storage_$",
                            "typeString": "mapping(address => contract Freight[] storage ref)"
                          }
                        },
                        "id": 1202,
                        "indexExpression": {
                          "id": 1201,
                          "name": "offer_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1193,
                          "src": "2216:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2201:22:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_Freight_$1026_$dyn_storage",
                          "typeString": "contract Freight[] storage ref"
                        }
                      }
                    ],
                    "id": 1203,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2200:24:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_Freight_$1026_$dyn_storage",
                      "typeString": "contract Freight[] storage ref"
                    }
                  },
                  "functionReturnParameters": 1199,
                  "id": 1204,
                  "nodeType": "Return",
                  "src": "2193:31:2"
                }
              ]
            },
            "functionSelector": "0598de40",
            "id": 1206,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getFreightsByOffer",
            "nameLocation": "2109:18:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1194,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1193,
                  "mutability": "mutable",
                  "name": "offer_",
                  "nameLocation": "2136:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1206,
                  "src": "2128:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1192,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2128:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2127:16:2"
            },
            "returnParameters": {
              "id": 1199,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1198,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1206,
                  "src": "2165:16:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_Freight_$1026_$dyn_memory_ptr",
                    "typeString": "contract Freight[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1196,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 1195,
                        "name": "Freight",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1026,
                        "src": "2165:7:2"
                      },
                      "referencedDeclaration": 1026,
                      "src": "2165:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Freight_$1026",
                        "typeString": "contract Freight"
                      }
                    },
                    "id": 1197,
                    "nodeType": "ArrayTypeName",
                    "src": "2165:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_Freight_$1026_$dyn_storage_ptr",
                      "typeString": "contract Freight[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2164:18:2"
            },
            "scope": 1228,
            "src": "2100:131:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1226,
              "nodeType": "Block",
              "src": "2312:83:2",
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 1214,
                            "name": "freights_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1047,
                            "src": "2330:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_contract$_Freight_$1026_$dyn_storage_$",
                              "typeString": "mapping(address => contract Freight[] storage ref)"
                            }
                          },
                          "id": 1216,
                          "indexExpression": {
                            "id": 1215,
                            "name": "owner_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1208,
                            "src": "2345:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2330:22:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_Freight_$1026_$dyn_storage",
                            "typeString": "contract Freight[] storage ref"
                          }
                        },
                        "id": 1223,
                        "indexExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1222,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 1217,
                                "name": "freights_owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1047,
                                "src": "2353:14:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_contract$_Freight_$1026_$dyn_storage_$",
                                  "typeString": "mapping(address => contract Freight[] storage ref)"
                                }
                              },
                              "id": 1219,
                              "indexExpression": {
                                "id": 1218,
                                "name": "owner_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1208,
                                "src": "2368:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2353:22:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_contract$_Freight_$1026_$dyn_storage",
                                "typeString": "contract Freight[] storage ref"
                              }
                            },
                            "id": 1220,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "2353:29:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 1221,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2385:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "2353:33:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2330:57:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Freight_$1026",
                          "typeString": "contract Freight"
                        }
                      }
                    ],
                    "id": 1224,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2329:59:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Freight_$1026",
                      "typeString": "contract Freight"
                    }
                  },
                  "functionReturnParameters": 1213,
                  "id": 1225,
                  "nodeType": "Return",
                  "src": "2322:66:2"
                }
              ]
            },
            "functionSelector": "e1d4dfb1",
            "id": 1227,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getLastFreightOwner",
            "nameLocation": "2246:19:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1209,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1208,
                  "mutability": "mutable",
                  "name": "owner_",
                  "nameLocation": "2274:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1227,
                  "src": "2266:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1207,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2266:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2265:16:2"
            },
            "returnParameters": {
              "id": 1213,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1212,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1227,
                  "src": "2303:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Freight_$1026",
                    "typeString": "contract Freight"
                  },
                  "typeName": {
                    "id": 1211,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1210,
                      "name": "Freight",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1026,
                      "src": "2303:7:2"
                    },
                    "referencedDeclaration": 1026,
                    "src": "2303:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Freight_$1026",
                      "typeString": "contract Freight"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2302:9:2"
            },
            "scope": 1228,
            "src": "2237:158:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1229,
        "src": "119:2278:2",
        "usedErrors": []
      }
    ],
    "src": "39:2358:2"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/FreightFactory.sol",
    "exportedSymbols": {
      "Address": [
        63
      ],
      "CloneFactory": [
        36
      ],
      "Freight": [
        1026
      ],
      "FreightDetails": [
        87
      ],
      "FreightFactory": [
        1228
      ],
      "FreightSituation": [
        48
      ],
      "Offer": [
        70
      ],
      "WholeFreight": [
        98
      ]
    },
    "id": 1229,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1028,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "39:24:2"
      },
      {
        "absolutePath": "project:/contracts/CloneFactory.sol",
        "file": "./CloneFactory.sol",
        "id": 1029,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1229,
        "sourceUnit": 37,
        "src": "65:28:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Freight.sol",
        "file": "./Freight.sol",
        "id": 1030,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1229,
        "sourceUnit": 1027,
        "src": "94:23:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1031,
              "name": "CloneFactory",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 36,
              "src": "146:12:2"
            },
            "id": 1032,
            "nodeType": "InheritanceSpecifier",
            "src": "146:12:2"
          }
        ],
        "canonicalName": "FreightFactory",
        "contractDependencies": [
          1026
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1228,
        "linearizedBaseContracts": [
          1228,
          36
        ],
        "name": "FreightFactory",
        "nameLocation": "128:14:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "40c63a1c",
            "id": 1036,
            "mutability": "mutable",
            "name": "freights",
            "nameLocation": "206:8:2",
            "nodeType": "VariableDeclaration",
            "scope": 1228,
            "src": "189:25:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_contract$_Freight_$1026_$dyn_storage",
              "typeString": "contract Freight[]"
            },
            "typeName": {
              "baseType": {
                "id": 1034,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 1033,
                  "name": "Freight",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1026,
                  "src": "189:7:2"
                },
                "referencedDeclaration": 1026,
                "src": "189:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_Freight_$1026",
                  "typeString": "contract Freight"
                }
              },
              "id": 1035,
              "nodeType": "ArrayTypeName",
              "src": "189:9:2",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_contract$_Freight_$1026_$dyn_storage_ptr",
                "typeString": "contract Freight[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1041,
            "mutability": "mutable",
            "name": "freights_contract",
            "nameLocation": "269:17:2",
            "nodeType": "VariableDeclaration",
            "scope": 1228,
            "src": "241:45:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_contract$_Freight_$1026_$",
              "typeString": "mapping(address => contract Freight)"
            },
            "typeName": {
              "id": 1040,
              "keyType": {
                "id": 1037,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "249:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "241:27:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_contract$_Freight_$1026_$",
                "typeString": "mapping(address => contract Freight)"
              },
              "valueType": {
                "id": 1039,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 1038,
                  "name": "Freight",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1026,
                  "src": "260:7:2"
                },
                "referencedDeclaration": 1026,
                "src": "260:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_Freight_$1026",
                  "typeString": "contract Freight"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1047,
            "mutability": "mutable",
            "name": "freights_owner",
            "nameLocation": "359:14:2",
            "nodeType": "VariableDeclaration",
            "scope": 1228,
            "src": "329:44:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_contract$_Freight_$1026_$dyn_storage_$",
              "typeString": "mapping(address => contract Freight[])"
            },
            "typeName": {
              "id": 1046,
              "keyType": {
                "id": 1042,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "337:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "329:29:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_contract$_Freight_$1026_$dyn_storage_$",
                "typeString": "mapping(address => contract Freight[])"
              },
              "valueType": {
                "baseType": {
                  "id": 1044,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 1043,
                    "name": "Freight",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1026,
                    "src": "348:7:2"
                  },
                  "referencedDeclaration": 1026,
                  "src": "348:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Freight_$1026",
                    "typeString": "contract Freight"
                  }
                },
                "id": 1045,
                "nodeType": "ArrayTypeName",
                "src": "348:9:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_contract$_Freight_$1026_$dyn_storage_ptr",
                  "typeString": "contract Freight[]"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1053,
            "mutability": "mutable",
            "name": "freights_offer",
            "nameLocation": "438:14:2",
            "nodeType": "VariableDeclaration",
            "scope": 1228,
            "src": "408:44:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_contract$_Freight_$1026_$dyn_storage_$",
              "typeString": "mapping(address => contract Freight[])"
            },
            "typeName": {
              "id": 1052,
              "keyType": {
                "id": 1048,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "416:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "408:29:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_contract$_Freight_$1026_$dyn_storage_$",
                "typeString": "mapping(address => contract Freight[])"
              },
              "valueType": {
                "baseType": {
                  "id": 1050,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 1049,
                    "name": "Freight",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1026,
                    "src": "427:7:2"
                  },
                  "referencedDeclaration": 1026,
                  "src": "427:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Freight_$1026",
                    "typeString": "contract Freight"
                  }
                },
                "id": 1051,
                "nodeType": "ArrayTypeName",
                "src": "427:9:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_contract$_Freight_$1026_$dyn_storage_ptr",
                  "typeString": "contract Freight[]"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1055,
            "mutability": "mutable",
            "name": "master_contract",
            "nameLocation": "505:15:2",
            "nodeType": "VariableDeclaration",
            "scope": 1228,
            "src": "497:23:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1054,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "497:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1073,
              "nodeType": "Block",
              "src": "660:90:2",
              "statements": [
                {
                  "assignments": [
                    1060
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1060,
                      "mutability": "mutable",
                      "name": "master",
                      "nameLocation": "678:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1073,
                      "src": "670:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Freight_$1026",
                        "typeString": "contract Freight"
                      },
                      "typeName": {
                        "id": 1059,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1058,
                          "name": "Freight",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1026,
                          "src": "670:7:2"
                        },
                        "referencedDeclaration": 1026,
                        "src": "670:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Freight_$1026",
                          "typeString": "contract Freight"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1065,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1063,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "687:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Freight_$1026_$",
                        "typeString": "function () returns (contract Freight)"
                      },
                      "typeName": {
                        "id": 1062,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1061,
                          "name": "Freight",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1026,
                          "src": "691:7:2"
                        },
                        "referencedDeclaration": 1026,
                        "src": "691:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Freight_$1026",
                          "typeString": "contract Freight"
                        }
                      }
                    },
                    "id": 1064,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "687:13:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Freight_$1026",
                      "typeString": "contract Freight"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "670:30:2"
                },
                {
                  "expression": {
                    "id": 1071,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1066,
                      "name": "master_contract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1055,
                      "src": "710:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1069,
                          "name": "master",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1060,
                          "src": "736:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Freight_$1026",
                            "typeString": "contract Freight"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_Freight_$1026",
                            "typeString": "contract Freight"
                          }
                        ],
                        "id": 1068,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "728:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1067,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "728:7:2",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1070,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "728:15:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "710:33:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1072,
                  "nodeType": "ExpressionStatement",
                  "src": "710:33:2"
                }
              ]
            },
            "id": 1074,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1056,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "657:2:2"
            },
            "returnParameters": {
              "id": 1057,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "660:0:2"
            },
            "scope": 1228,
            "src": "646:104:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1116,
              "nodeType": "Block",
              "src": "866:391:2",
              "statements": [
                {
                  "assignments": [
                    1079
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1079,
                      "mutability": "mutable",
                      "name": "freight",
                      "nameLocation": "914:7:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1116,
                      "src": "906:15:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Freight_$1026",
                        "typeString": "contract Freight"
                      },
                      "typeName": {
                        "id": 1078,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1077,
                          "name": "Freight",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1026,
                          "src": "906:7:2"
                        },
                        "referencedDeclaration": 1026,
                        "src": "906:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Freight_$1026",
                          "typeString": "contract Freight"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1085,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1082,
                            "name": "master_contract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1055,
                            "src": "944:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1081,
                          "name": "createClone",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17,
                          "src": "932:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_address_$",
                            "typeString": "function (address) returns (address)"
                          }
                        },
                        "id": 1083,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "932:28:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1080,
                      "name": "Freight",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1026,
                      "src": "924:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_Freight_$1026_$",
                        "typeString": "type(contract Freight)"
                      }
                    },
                    "id": 1084,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "924:37:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Freight_$1026",
                      "typeString": "contract Freight"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "906:55:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1089,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "988:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1090,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "988:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 1086,
                        "name": "freight",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1079,
                        "src": "971:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Freight_$1026",
                          "typeString": "contract Freight"
                        }
                      },
                      "id": 1088,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setOwner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 211,
                      "src": "971:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 1091,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "971:28:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1092,
                  "nodeType": "ExpressionStatement",
                  "src": "971:28:2"
                },
                {
                  "expression": {
                    "id": 1100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1093,
                        "name": "freights_contract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1041,
                        "src": "1049:17:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_contract$_Freight_$1026_$",
                          "typeString": "mapping(address => contract Freight)"
                        }
                      },
                      "id": 1098,
                      "indexExpression": {
                        "arguments": [
                          {
                            "id": 1096,
                            "name": "freight",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1079,
                            "src": "1075:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Freight_$1026",
                              "typeString": "contract Freight"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Freight_$1026",
                              "typeString": "contract Freight"
                            }
                          ],
                          "id": 1095,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1067:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1094,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1067:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1097,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1067:16:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1049:35:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Freight_$1026",
                        "typeString": "contract Freight"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1099,
                      "name": "freight",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1079,
                      "src": "1087:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Freight_$1026",
                        "typeString": "contract Freight"
                      }
                    },
                    "src": "1049:45:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Freight_$1026",
                      "typeString": "contract Freight"
                    }
                  },
                  "id": 1101,
                  "nodeType": "ExpressionStatement",
                  "src": "1049:45:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1107,
                        "name": "freight",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1079,
                        "src": "1174:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Freight_$1026",
                          "typeString": "contract Freight"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Freight_$1026",
                          "typeString": "contract Freight"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 1102,
                          "name": "freights_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1047,
                          "src": "1142:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_contract$_Freight_$1026_$dyn_storage_$",
                            "typeString": "mapping(address => contract Freight[] storage ref)"
                          }
                        },
                        "id": 1105,
                        "indexExpression": {
                          "expression": {
                            "id": 1103,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1157:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1104,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1157:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1142:26:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_Freight_$1026_$dyn_storage",
                          "typeString": "contract Freight[] storage ref"
                        }
                      },
                      "id": 1106,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1142:31:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_contract$_Freight_$1026_$dyn_storage_ptr_$_t_contract$_Freight_$1026_$returns$__$bound_to$_t_array$_t_contract$_Freight_$1026_$dyn_storage_ptr_$",
                        "typeString": "function (contract Freight[] storage pointer,contract Freight)"
                      }
                    },
                    "id": 1108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1142:40:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1109,
                  "nodeType": "ExpressionStatement",
                  "src": "1142:40:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1113,
                        "name": "freight",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1079,
                        "src": "1242:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Freight_$1026",
                          "typeString": "contract Freight"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Freight_$1026",
                          "typeString": "contract Freight"
                        }
                      ],
                      "expression": {
                        "id": 1110,
                        "name": "freights",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1036,
                        "src": "1228:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_Freight_$1026_$dyn_storage",
                          "typeString": "contract Freight[] storage ref"
                        }
                      },
                      "id": 1112,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1228:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_contract$_Freight_$1026_$dyn_storage_ptr_$_t_contract$_Freight_$1026_$returns$__$bound_to$_t_array$_t_contract$_Freight_$1026_$dyn_storage_ptr_$",
                        "typeString": "function (contract Freight[] storage pointer,contract Freight)"
                      }
                    },
                    "id": 1114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1228:22:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1115,
                  "nodeType": "ExpressionStatement",
                  "src": "1228:22:2"
                }
              ]
            },
            "functionSelector": "acce5321",
            "id": 1117,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createFreight",
            "nameLocation": "843:13:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1075,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "856:2:2"
            },
            "returnParameters": {
              "id": 1076,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "866:0:2"
            },
            "scope": 1228,
            "src": "834:423:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1150,
              "nodeType": "Block",
              "src": "1414:226:2",
              "statements": [
                {
                  "assignments": [
                    1128
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1128,
                      "mutability": "mutable",
                      "name": "freight",
                      "nameLocation": "1432:7:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1150,
                      "src": "1424:15:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Freight_$1026",
                        "typeString": "contract Freight"
                      },
                      "typeName": {
                        "id": 1127,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1126,
                          "name": "Freight",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1026,
                          "src": "1424:7:2"
                        },
                        "referencedDeclaration": 1026,
                        "src": "1424:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Freight_$1026",
                          "typeString": "contract Freight"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1132,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1129,
                      "name": "freights_contract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1041,
                      "src": "1442:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_contract$_Freight_$1026_$",
                        "typeString": "mapping(address => contract Freight)"
                      }
                    },
                    "id": 1131,
                    "indexExpression": {
                      "id": 1130,
                      "name": "contract_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1123,
                      "src": "1460:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1442:28:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Freight_$1026",
                      "typeString": "contract Freight"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1424:46:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1136,
                        "name": "value_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1119,
                        "src": "1500:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1137,
                        "name": "advance_money_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1121,
                        "src": "1508:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 1138,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1524:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1139,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1524:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 1133,
                        "name": "freight",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1128,
                        "src": "1480:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Freight_$1026",
                          "typeString": "contract Freight"
                        }
                      },
                      "id": 1135,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "createOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 485,
                      "src": "1480:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,uint256,address) external"
                      }
                    },
                    "id": 1140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1480:55:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1141,
                  "nodeType": "ExpressionStatement",
                  "src": "1480:55:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1147,
                        "name": "freight",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1128,
                        "src": "1625:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Freight_$1026",
                          "typeString": "contract Freight"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Freight_$1026",
                          "typeString": "contract Freight"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 1142,
                          "name": "freights_offer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1053,
                          "src": "1593:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_contract$_Freight_$1026_$dyn_storage_$",
                            "typeString": "mapping(address => contract Freight[] storage ref)"
                          }
                        },
                        "id": 1145,
                        "indexExpression": {
                          "expression": {
                            "id": 1143,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1608:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1144,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1608:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1593:26:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_Freight_$1026_$dyn_storage",
                          "typeString": "contract Freight[] storage ref"
                        }
                      },
                      "id": 1146,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1593:31:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_contract$_Freight_$1026_$dyn_storage_ptr_$_t_contract$_Freight_$1026_$returns$__$bound_to$_t_array$_t_contract$_Freight_$1026_$dyn_storage_ptr_$",
                        "typeString": "function (contract Freight[] storage pointer,contract Freight)"
                      }
                    },
                    "id": 1148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1593:40:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1149,
                  "nodeType": "ExpressionStatement",
                  "src": "1593:40:2"
                }
              ]
            },
            "functionSelector": "66b6aff6",
            "id": 1151,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createOffer",
            "nameLocation": "1342:11:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1124,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1119,
                  "mutability": "mutable",
                  "name": "value_",
                  "nameLocation": "1359:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1151,
                  "src": "1354:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1118,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1354:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1121,
                  "mutability": "mutable",
                  "name": "advance_money_",
                  "nameLocation": "1372:14:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1151,
                  "src": "1367:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1120,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1367:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1123,
                  "mutability": "mutable",
                  "name": "contract_",
                  "nameLocation": "1396:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1151,
                  "src": "1388:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1122,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1388:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1353:53:2"
            },
            "returnParameters": {
              "id": 1125,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1414:0:2"
            },
            "scope": 1228,
            "src": "1333:307:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1161,
              "nodeType": "Block",
              "src": "1780:34:2",
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "id": 1158,
                        "name": "freights",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1036,
                        "src": "1798:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_Freight_$1026_$dyn_storage",
                          "typeString": "contract Freight[] storage ref"
                        }
                      }
                    ],
                    "id": 1159,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1797:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_Freight_$1026_$dyn_storage",
                      "typeString": "contract Freight[] storage ref"
                    }
                  },
                  "functionReturnParameters": 1157,
                  "id": 1160,
                  "nodeType": "Return",
                  "src": "1790:17:2"
                }
              ]
            },
            "functionSelector": "fcbe7cad",
            "id": 1162,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getFreights",
            "nameLocation": "1727:11:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1152,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1738:2:2"
            },
            "returnParameters": {
              "id": 1157,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1156,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1162,
                  "src": "1762:16:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_Freight_$1026_$dyn_memory_ptr",
                    "typeString": "contract Freight[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1154,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 1153,
                        "name": "Freight",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1026,
                        "src": "1762:7:2"
                      },
                      "referencedDeclaration": 1026,
                      "src": "1762:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Freight_$1026",
                        "typeString": "contract Freight"
                      }
                    },
                    "id": 1155,
                    "nodeType": "ArrayTypeName",
                    "src": "1762:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_Freight_$1026_$dyn_storage_ptr",
                      "typeString": "contract Freight[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1761:18:2"
            },
            "scope": 1228,
            "src": "1718:96:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1175,
              "nodeType": "Block",
              "src": "1896:61:2",
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "baseExpression": {
                          "id": 1170,
                          "name": "freights_contract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1041,
                          "src": "1914:17:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_contract$_Freight_$1026_$",
                            "typeString": "mapping(address => contract Freight)"
                          }
                        },
                        "id": 1172,
                        "indexExpression": {
                          "id": 1171,
                          "name": "address_freight_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1164,
                          "src": "1932:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1914:35:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Freight_$1026",
                          "typeString": "contract Freight"
                        }
                      }
                    ],
                    "id": 1173,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1913:37:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Freight_$1026",
                      "typeString": "contract Freight"
                    }
                  },
                  "functionReturnParameters": 1169,
                  "id": 1174,
                  "nodeType": "Return",
                  "src": "1906:44:2"
                }
              ]
            },
            "functionSelector": "75501836",
            "id": 1176,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getFreight",
            "nameLocation": "1829:10:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1165,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1164,
                  "mutability": "mutable",
                  "name": "address_freight_",
                  "nameLocation": "1848:16:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1176,
                  "src": "1840:24:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1163,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1840:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1839:26:2"
            },
            "returnParameters": {
              "id": 1169,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1168,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1176,
                  "src": "1887:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Freight_$1026",
                    "typeString": "contract Freight"
                  },
                  "typeName": {
                    "id": 1167,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1166,
                      "name": "Freight",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1026,
                      "src": "1887:7:2"
                    },
                    "referencedDeclaration": 1026,
                    "src": "1887:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Freight_$1026",
                      "typeString": "contract Freight"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1886:9:2"
            },
            "scope": 1228,
            "src": "1820:137:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1190,
              "nodeType": "Block",
              "src": "2046:48:2",
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "baseExpression": {
                          "id": 1185,
                          "name": "freights_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1047,
                          "src": "2064:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_contract$_Freight_$1026_$dyn_storage_$",
                            "typeString": "mapping(address => contract Freight[] storage ref)"
                          }
                        },
                        "id": 1187,
                        "indexExpression": {
                          "id": 1186,
                          "name": "owner_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1178,
                          "src": "2079:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2064:22:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_Freight_$1026_$dyn_storage",
                          "typeString": "contract Freight[] storage ref"
                        }
                      }
                    ],
                    "id": 1188,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2063:24:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_Freight_$1026_$dyn_storage",
                      "typeString": "contract Freight[] storage ref"
                    }
                  },
                  "functionReturnParameters": 1184,
                  "id": 1189,
                  "nodeType": "Return",
                  "src": "2056:31:2"
                }
              ]
            },
            "functionSelector": "faa8cc83",
            "id": 1191,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getFreightsByOwner",
            "nameLocation": "1972:18:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1179,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1178,
                  "mutability": "mutable",
                  "name": "owner_",
                  "nameLocation": "1999:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1191,
                  "src": "1991:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1177,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1991:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1990:16:2"
            },
            "returnParameters": {
              "id": 1184,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1183,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1191,
                  "src": "2028:16:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_Freight_$1026_$dyn_memory_ptr",
                    "typeString": "contract Freight[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1181,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 1180,
                        "name": "Freight",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1026,
                        "src": "2028:7:2"
                      },
                      "referencedDeclaration": 1026,
                      "src": "2028:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Freight_$1026",
                        "typeString": "contract Freight"
                      }
                    },
                    "id": 1182,
                    "nodeType": "ArrayTypeName",
                    "src": "2028:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_Freight_$1026_$dyn_storage_ptr",
                      "typeString": "contract Freight[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2027:18:2"
            },
            "scope": 1228,
            "src": "1963:131:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1205,
              "nodeType": "Block",
              "src": "2183:48:2",
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "baseExpression": {
                          "id": 1200,
                          "name": "freights_offer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1053,
                          "src": "2201:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_contract$_Freight_$1026_$dyn_storage_$",
                            "typeString": "mapping(address => contract Freight[] storage ref)"
                          }
                        },
                        "id": 1202,
                        "indexExpression": {
                          "id": 1201,
                          "name": "offer_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1193,
                          "src": "2216:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2201:22:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_Freight_$1026_$dyn_storage",
                          "typeString": "contract Freight[] storage ref"
                        }
                      }
                    ],
                    "id": 1203,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2200:24:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_Freight_$1026_$dyn_storage",
                      "typeString": "contract Freight[] storage ref"
                    }
                  },
                  "functionReturnParameters": 1199,
                  "id": 1204,
                  "nodeType": "Return",
                  "src": "2193:31:2"
                }
              ]
            },
            "functionSelector": "0598de40",
            "id": 1206,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getFreightsByOffer",
            "nameLocation": "2109:18:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1194,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1193,
                  "mutability": "mutable",
                  "name": "offer_",
                  "nameLocation": "2136:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1206,
                  "src": "2128:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1192,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2128:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2127:16:2"
            },
            "returnParameters": {
              "id": 1199,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1198,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1206,
                  "src": "2165:16:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_Freight_$1026_$dyn_memory_ptr",
                    "typeString": "contract Freight[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1196,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 1195,
                        "name": "Freight",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1026,
                        "src": "2165:7:2"
                      },
                      "referencedDeclaration": 1026,
                      "src": "2165:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Freight_$1026",
                        "typeString": "contract Freight"
                      }
                    },
                    "id": 1197,
                    "nodeType": "ArrayTypeName",
                    "src": "2165:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_Freight_$1026_$dyn_storage_ptr",
                      "typeString": "contract Freight[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2164:18:2"
            },
            "scope": 1228,
            "src": "2100:131:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1226,
              "nodeType": "Block",
              "src": "2312:83:2",
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 1214,
                            "name": "freights_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1047,
                            "src": "2330:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_contract$_Freight_$1026_$dyn_storage_$",
                              "typeString": "mapping(address => contract Freight[] storage ref)"
                            }
                          },
                          "id": 1216,
                          "indexExpression": {
                            "id": 1215,
                            "name": "owner_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1208,
                            "src": "2345:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2330:22:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_Freight_$1026_$dyn_storage",
                            "typeString": "contract Freight[] storage ref"
                          }
                        },
                        "id": 1223,
                        "indexExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1222,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 1217,
                                "name": "freights_owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1047,
                                "src": "2353:14:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_contract$_Freight_$1026_$dyn_storage_$",
                                  "typeString": "mapping(address => contract Freight[] storage ref)"
                                }
                              },
                              "id": 1219,
                              "indexExpression": {
                                "id": 1218,
                                "name": "owner_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1208,
                                "src": "2368:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2353:22:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_contract$_Freight_$1026_$dyn_storage",
                                "typeString": "contract Freight[] storage ref"
                              }
                            },
                            "id": 1220,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "2353:29:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 1221,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2385:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "2353:33:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2330:57:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Freight_$1026",
                          "typeString": "contract Freight"
                        }
                      }
                    ],
                    "id": 1224,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2329:59:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Freight_$1026",
                      "typeString": "contract Freight"
                    }
                  },
                  "functionReturnParameters": 1213,
                  "id": 1225,
                  "nodeType": "Return",
                  "src": "2322:66:2"
                }
              ]
            },
            "functionSelector": "e1d4dfb1",
            "id": 1227,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getLastFreightOwner",
            "nameLocation": "2246:19:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1209,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1208,
                  "mutability": "mutable",
                  "name": "owner_",
                  "nameLocation": "2274:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1227,
                  "src": "2266:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1207,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2266:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2265:16:2"
            },
            "returnParameters": {
              "id": 1213,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1212,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1227,
                  "src": "2303:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Freight_$1026",
                    "typeString": "contract Freight"
                  },
                  "typeName": {
                    "id": 1211,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1210,
                      "name": "Freight",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1026,
                      "src": "2303:7:2"
                    },
                    "referencedDeclaration": 1026,
                    "src": "2303:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Freight_$1026",
                      "typeString": "contract Freight"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2302:9:2"
            },
            "scope": 1228,
            "src": "2237:158:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1229,
        "src": "119:2278:2",
        "usedErrors": []
      }
    ],
    "src": "39:2358:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.11+commit.d7f03943.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x755A761c2EE8C943B84108eECdfbf8A92A822163",
      "transactionHash": "0x3b21a21ec23839ff95854410f01e5cfaf48c189c6cb8863933d987934e94e849"
    }
  },
  "schemaVersion": "3.4.4",
  "updatedAt": "2022-02-19T03:26:53.661Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}